<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/class_list.css">
</head>
<body>
    <div class="container">
        <div class="top d-flex justify-content-between">
            <h1>Class</h1>
            <div class="search-container">
                <div class="input-wrapper">
                    <img src="/img/search 1.svg" alt="Search" class="search-icon"> 
                    <input type="text" class="search-input" placeholder="Search">
                </div>
                
            </div>
            <img src="/img/Ava.svg" alt="User" class="user-avatar"> 
            <div class="user">
                <h3>Veronica</h3>
                <p>Admin</p>
            </div>
        </div>
        <div class="tab-box d-flex justify-content-start">
            <button class="tab-btn">Class List</button>
            <button class="tab-btn">New Class</button>
            <div class="line"></div>
        </div>
        <div class="content-box">
            <div class="content">
                <table>
                    <tr>
                        <th></th>
                        <th>Class</th>
                        <th>Head Teacher</th>
                        <th>Size</th>
                        <th>Action</th>
                    </tr>
                    {{#each classes}}
                    <tr>
                        <td>{{@index}}</td>
                        <td>{{this.Name}}</td>
                        <td>{{this.teacherName}}</td>
                        <td>40</td>
                        <td>
                            <button class="view">View</button>
                        </td>
                    </tr>
                    {{/each}}
                </table>
                <div class="table-control d-inline-flex justify-content-start align-items-center">
                    <div class="rows-per-page d-inline-flex">
                        <label for="rows" class="align-self-center">Rows per page:</label>
                        <select id="rows" name="rows">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="5">5</option>
                        </select>
                    </div>
                    <div class="pagination-info">
                        1/1 of 1
                    </div>
                    <div class="pagination-controls">
                        <button>&lt;</button> <!-- Previous page -->
                        <button>&gt;</button> <!-- Next page -->
                    </div>
                </div>
            </div>
            <div class="content">
                <div class="form-row col-10">
                    <div class="form-group col">
                        <label for="className">Class Name</label>
                        <input type="text" class="form-control" id="className">
                    </div>
                    <div class="form-group col">
                        <label for="headTeacher">Head Teacher</label>
                        <select id="headTeacher" class="form-control">
                            <option selected>Choose...</option>
                            <option>Nguyen Thien</option>
                            <option>Nguyen Thien</option>
                            <option>Nguyen Thien</option>
                            <option>Nguyen Thien</option>
                        </select>
                    </div>
                </div>
                <div class="uploadFile mt-3 d-flex flex-column align-items-center justify-content-center mx-auto">
                    <img src="/img/document 1.svg" alt="Document Upload">
                    <h6>List of Students of the class</h6>
                    <p>Select a file or drag and drop here</p>
                    <p style="opacity: 50%;"></p>
                    <form class="d-flex flex-column align-items-center" >
                        <input type="file" class="form-control-file" id="exampleFormControlFile1" style="display: none;">
                        <span id="file-chosen" class="mb-1" style="opacity: 50%;">Excel file size no more than 50MB</span>
                        <label for="exampleFormControlFile1" class="chooseFile">Choose File</label>
                        
                    </form>
                </div>
                <div class="d-flex ">
                    <button class="edit mx-auto mt-3">
                        <img src="/img/edit.png" alt="Edit">
                        Add Class
                    </button>
                </div>
            </div>
            
        </div>
        

        
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
        const tabs = document.querySelectorAll('.tab-btn');
        const allContent = document.querySelectorAll('.content');
        const line = document.querySelector('.line');
        const defaultRowsPerPage = 10; // Set your default value here
        let currentPage = 1;
        let rowsPerPage = defaultRowsPerPage;
        const rowsSelect = document.getElementById('rows');
        function updateLine(tab) {
            line.style.width = `${tab.offsetWidth}px`;
            line.style.left = `${tab.offsetLeft}px`;
            line.style.bottom = '-3px';
        }

        function updateTableDisplay(table) {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            const paginationInfo = document.querySelector('.pagination-info');
            
            // Hide all rows
            rows.forEach(row => {
                row.style.display = 'none';
            });

            // Calculate the range of rows to display
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            
            // Show the rows for the current page
            rows.forEach((row, index) => {
                if (index >= start && index < end) {
                    row.style.display = 'table-row';
                }
            });

            paginationInfo.textContent = `${currentPage}/${totalPages} of ${rows.length}`;
        }
        function resetRowsPerPage(table) {
            currentPage = 1; // Reset to the first page
            rowsPerPage = defaultRowsPerPage; // Reset to the default rows per page
            rowsSelect.value = defaultRowsPerPage.toString(); // Update the select element to show the default value
            updateTableDisplay(table);
        }

        function goToPreviousPage(table) {
            if (currentPage > 1) {
                currentPage--;
                updateTableDisplay(table);
            }
        }

        function goToNextPage(table) {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updateTableDisplay(table);
            }
        }
        

        tabs.forEach((tab, index) => {
            tab.addEventListener('click', () => {
                tabs.forEach((t, i) => {
                    t.classList.remove('active');
                    allContent[i].style.display = 'none';
                });

                tab.classList.add('active');
                allContent[index].style.display = 'block';
                updateLine(tab);

                // Reset rows per page for the active tab's table
                const activeTable = allContent[index].querySelector('table');
                resetRowsPerPage(activeTable);
            });
        });
        document.getElementById('rows').addEventListener('change', function(event) {
            rowsPerPage = parseInt(event.target.value, 10);
            currentPage = 1; // Reset to the first page
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            updateTableDisplay(activeTable);
        });

        const prevButton = document.querySelector('.pagination-controls button:first-child');
        const nextButton = document.querySelector('.pagination-controls button:last-child');

        prevButton.addEventListener('click', function() {
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            goToPreviousPage(activeTable);
        });
        nextButton.addEventListener('click', function() {
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            goToNextPage(activeTable);
        });

        // Initialize
        if(allContent.length > 0) {
                tabs[0].classList.add('active');
                allContent[0].style.display = 'block';
                updateLine(tabs[0]);

                const firstTable = allContent[0].querySelector('table');
                resetRowsPerPage(firstTable); // Use reset function to initialize the table
            }
        });

        //==============DRAG FILE INTO DIV==================================//
        document.getElementById('exampleFormControlFile1').addEventListener('change', function() {
        var fileName = document.getElementById('exampleFormControlFile1').files[0].name;
        document.getElementById('file-chosen').textContent = fileName;
    });

        document.addEventListener('DOMContentLoaded', function () {
    var uploadDiv = document.querySelector('.uploadFile');
    var fileInput = document.getElementById('exampleFormControlFile1');

    uploadDiv.addEventListener('dragover', function (e) {
        e.preventDefault();
        e.stopPropagation();
        // Add some visual feedback here
    });

    uploadDiv.addEventListener('drop', function (e) {
        e.preventDefault();
        e.stopPropagation();
        if (e.dataTransfer.files.length) {
            fileInput.files = e.dataTransfer.files;
            // Update any UI component or perform any action after file drop
        }
    });

    fileInput.addEventListener('change', function () {
        // Handle file selection via input
        // For example, update UI to show selected file name
    });
});


    </script>
</body>