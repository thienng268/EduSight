<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/schedule_list.css">
</head>
<body>
    <div class="container">
        <div class="top d-flex justify-content-between">
            <h1>Gradebook</h1>
            <div class="search-container">
                <div class="input-wrapper">
                    <img src="/img/search 1.svg" alt="Search" class="search-icon"> 
                    <input type="text" class="search-input" placeholder="Search">
                </div>
                
            </div>
            
        </div>
                <table>
                    <tr>
                        <th></th>
                        <th>Class Name</th>
                        <th>Head Teacher</th>
                        <th>Size</th>
                        <th>Action</th>
                    </tr>
                    {{#each classes}}
                    <tr>
                        <td>{{@index}}</td>
                        <td>{{this.Name}}</td>
                        <td>{{this.teacherName}}</td>
                        <td>40</td> <!-- Giả sử có trường Size -->
                        <td>
                            <button onclick="viewClass('{{this._id}}')" class="view">View</button>
                        </td>
                    </tr>
                    <script>
                        console.log("Teacher ID:", {{this.teacherID}});
                    </script>
                    {{/each}}
                    
                    
                </table>
                <div class="table-control d-inline-flex justify-content-start align-items-center">
                    <div class="rows-per-page d-inline-flex">
                        <label for="rows" class="align-self-center">Rows per page:</label>
                        <select id="rows" name="rows">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="5">5</option>
                        </select>
                    </div>
                    <div class="pagination-info">
                        1/1 of 1
                    </div>
                    <div class="pagination-controls">
                        <button>&lt;</button> <!-- Previous page -->
                        <button>&gt;</button> <!-- Next page -->
                    </div>
                </div>
    </div>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const defaultRowsPerPage = 10; // Set your default value here
        let currentPage = 1;
        let rowsPerPage = defaultRowsPerPage;
        const rowsSelect = document.getElementById('rows');
        const paginationInfo = document.querySelector('.pagination-info');
        const prevButton = document.querySelector('.pagination-controls button:first-child');
        const nextButton = document.querySelector('.pagination-controls button:last-child');
        const table = document.querySelector('table'); // Assuming there is only one table

        function updateTableDisplay() {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            
            // Hide all rows
            rows.forEach(row => {
                row.style.display = 'none';
            });

            // Calculate the range of rows to display
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            
            // Show the rows for the current page
            rows.forEach((row, index) => {
                if (index >= start && index < end) {
                    row.style.display = '';
                }
            });

            paginationInfo.textContent = `Page ${currentPage} of ${totalPages}`;
        }

        function goToPage(pageNumber) {
            currentPage = pageNumber;
            updateTableDisplay();
        }

        rowsSelect.addEventListener('change', function(event) {
            rowsPerPage = parseInt(event.target.value, 10);
            goToPage(1); // Reset to the first page and update table display
        });

        prevButton.addEventListener('click', function() {
            if (currentPage > 1) {
                goToPage(currentPage - 1);
            }
        });

        nextButton.addEventListener('click', function() {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            if (currentPage < totalPages) {
                goToPage(currentPage + 1);
            }
        });

        // Initialize the table display
        updateTableDisplay();
        
    });
    </script>
    <script>
        function viewClass(classId) {
            window.location.href = `/grade/view?classId=${classId}`;
        }
    </script>
</body>