<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/homeroom.css">
</head>
<body>
    <div class="container">
        <div class="top d-flex justify-content-between">
            <h1>Homeroom</h1>
            <div class="search-container">
                <div class="input-wrapper">
                    <img src="/img/search 1.svg" alt="Search" class="search-icon"> 
                    <input type="text" class="search-input" placeholder="Search">
                </div>
                
            </div>
            <img src="/img/Ava.svg" alt="User" class="user-avatar"> 
            <div class="user">
                <h3>Veronica</h3>
                <p>Admin</p>
            </div>
        </div>
        <div class="tab-box d-flex justify-content-start">
            <button class="tab-btn">Evaluate Conduct</button>
            <button class="tab-btn">Finalize Grades</button>
            <div class="line"></div>
        </div>
        <div class="content-box">
            <div class="content">
                <table id="infoTable">
                <tr>
                    <th>ID</th>
                    <th>Student Name</th>
                    <th>Date of Birth</th>
                    <th>Status</th>
                    <th></th>
                </tr>
                <tr>
                    <td>HS001</td>
                    <td>Truong Thi Tuyet Nhung</td>
                    <td>11/03/1996</td>
                    <td>Teaching</td>
                    <td class="d-flex">
                        <button class="view">View</button>
                        <button type="button" class="edit" data-toggle="modal" data-target="#exampleModal">
                            Edit
                        </button>
                    </td>
                </tr>
                
                
            </table>
               
            <div class="content">
                
            </div>
            
        </div>
        

        
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
        const tabs = document.querySelectorAll('.tab-btn');
        const allContent = document.querySelectorAll('.content');
        const line = document.querySelector('.line');
        const defaultRowsPerPage = 10; // Set your default value here
        let currentPage = 1;
        let rowsPerPage = defaultRowsPerPage;
        const rowsSelect = document.getElementById('rows');
        function updateLine(tab) {
            line.style.width = `${tab.offsetWidth}px`;
            line.style.left = `${tab.offsetLeft}px`;
            line.style.bottom = '-3px';
        }

        function updateTableDisplay(table) {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            const paginationInfo = document.querySelector('.pagination-info');
            
            // Hide all rows
            rows.forEach(row => {
                row.style.display = 'none';
            });

            // Calculate the range of rows to display
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            
            // Show the rows for the current page
            rows.forEach((row, index) => {
                if (index >= start && index < end) {
                    row.style.display = 'table-row';
                }
            });

            paginationInfo.textContent = `${currentPage}/${totalPages} of ${rows.length}`;
        }
        function resetRowsPerPage(table) {
            currentPage = 1; // Reset to the first page
            rowsPerPage = defaultRowsPerPage; // Reset to the default rows per page
            rowsSelect.value = defaultRowsPerPage.toString(); // Update the select element to show the default value
            updateTableDisplay(table);
        }

        function goToPreviousPage(table) {
            if (currentPage > 1) {
                currentPage--;
                updateTableDisplay(table);
            }
        }

        function goToNextPage(table) {
            const rows = table.querySelectorAll('tr:not(:first-child)');
            const totalPages = Math.ceil(rows.length / rowsPerPage);
            if (currentPage < totalPages) {
                currentPage++;
                updateTableDisplay(table);
            }
        }
        

        tabs.forEach((tab, index) => {
            tab.addEventListener('click', () => {
                tabs.forEach((t, i) => {
                    t.classList.remove('active');
                    allContent[i].style.display = 'none';
                });

                tab.classList.add('active');
                allContent[index].style.display = 'block';
                updateLine(tab);

                // Reset rows per page for the active tab's table
                const activeTable = allContent[index].querySelector('table');
                resetRowsPerPage(activeTable);
            });
        });
        document.getElementById('rows').addEventListener('change', function(event) {
            rowsPerPage = parseInt(event.target.value, 10);
            currentPage = 1; // Reset to the first page
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            updateTableDisplay(activeTable);
        });

        const prevButton = document.querySelector('.pagination-controls button:first-child');
        const nextButton = document.querySelector('.pagination-controls button:last-child');

        prevButton.addEventListener('click', function() {
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            goToPreviousPage(activeTable);
        });
        nextButton.addEventListener('click', function() {
            const activeTable = document.querySelector('.content:not([style*="display: none"]) table');
            goToNextPage(activeTable);
        });

        // Initialize
        if(allContent.length > 0) {
                tabs[0].classList.add('active');
                allContent[0].style.display = 'block';
                updateLine(tabs[0]);

                const firstTable = allContent[0].querySelector('table');
                resetRowsPerPage(firstTable); // Use reset function to initialize the table
            }
        });

       


    </script>
</body>